/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package full.house;

import java.sql.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tim
 */
public class ToernooienLocatieView extends javax.swing.JFrame {

    int locatieID;
    
    /**
     * Creates new form InschrijvingView
     */
    public ToernooienLocatieView(int locatieID) {
        initComponents();
        this.locatieID = locatieID;
        getToernooien();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        inschrijvingTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Toernooien");
        setResizable(false);

        inschrijvingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        inschrijvingTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(inschrijvingTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Haalt toernooien op uit database.
     */
    private void getToernooien () {
        String query = "SELECT * FROM Evenement "
                + "LEFT JOIN Toernooi ON Evenement.evenementID = Toernooi.evenementID "
                + "LEFT JOIN ToernooiSoort ON Toernooi.soortToernooi = ToernooiSoort.soortID "
                + "WHERE locatieID = ?;";
        try {
            Connection conn = SimpleDataSource.getConnection();
            PreparedStatement stat = conn.prepareStatement(query);
            stat.setInt(1, locatieID);
            ResultSet result = stat.executeQuery();
            fillTable(result);
            result.close();
            stat.close();
        }
        catch (Exception e) {
            FullHouse.showDBError(e);
        }
    }
    
    /**
     * Vult de tabel met toernooien.
     * @param result
     * @throws SQLException 
     */
    private void fillTable(ResultSet result) throws SQLException {
        String[] columnNames = {"Evenement ID", "Evenement naam", "Datum", "Soort"};
        DefaultTableModel model = new TableModel();
        model.setDataVector(new Object[][]{}, columnNames);
        while (result.next()) {
            String evenementID = result.getString("evenementID");
            evenementID = FullHouse.addZeroes(evenementID, 4);
            String naam = result.getString("naam");
            Date datum = result.getDate("datum");
            String soort;
            if (result.getString("soortToernooi") == null) {
                soort = "Masterclass";
            }
            else {
                soort = result.getString("ToernooiSoort.beschrijving");
            }
            
            Object[] rowData = {evenementID, naam, datum, soort};
            model.addRow(rowData);
        }
        inschrijvingTable.setModel(model);
        result.close();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable inschrijvingTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
