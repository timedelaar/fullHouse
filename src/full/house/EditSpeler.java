/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package full.house;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;


/**
 *
 * @author Tim
 */
public class EditSpeler extends javax.swing.JFrame {
    //variabelen die nodig zijn binnen de class
    //worden later gedeclareerd
    
    SpelerView parent;
    int spelerID;
    String naam;
    String voorletters;
    String postcode;
    String woonplaats;
    String straatnaam;
    String huisNr;
    String telefoonNr;
    String email;
    double rating;
    double gewonnenGeld;
    /**
     * genereert een nieuwe JFrameForm 
     * EditSpeler met SpelerView als de parent
     */
    public EditSpeler(SpelerView parent, int spelerID) {
        initComponents();
        this.parent = parent;
        this.spelerID = spelerID;
        fillFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addUserLbl = new javax.swing.JLabel();
        naamLbl = new javax.swing.JLabel();
        voorlettersLbl = new javax.swing.JLabel();
        straatHuisNrLbl = new javax.swing.JLabel();
        woonplaatsLbl = new javax.swing.JLabel();
        postcodeLbl = new javax.swing.JLabel();
        emailLbl = new javax.swing.JLabel();
        telefoonNrLbl = new javax.swing.JLabel();
        ratingLbl = new javax.swing.JLabel();
        winstenLbl = new javax.swing.JLabel();
        naamField = new javax.swing.JTextField();
        voorlettersField = new javax.swing.JTextField();
        straatnaamField = new javax.swing.JTextField();
        huisNrField = new javax.swing.JTextField();
        woonplaatsField = new javax.swing.JTextField();
        postcodeField = new javax.swing.JTextField();
        telefoonNrField = new javax.swing.JTextField();
        emailField = new javax.swing.JTextField();
        ratingField = new javax.swing.JTextField();
        gewonnenGeldField = new javax.swing.JTextField();
        isDocentCB = new javax.swing.JCheckBox();
        saveBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        warningLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Bewerk speler");

        addUserLbl.setText("Bewerk gegevens van de speler.");

        naamLbl.setText("naam:");

        voorlettersLbl.setText("voorletters:");

        straatHuisNrLbl.setText("straatnaam & huisnr:");

        woonplaatsLbl.setText("woonplaats:");

        postcodeLbl.setText("postcode:");

        emailLbl.setText("E-mail adres:");

        telefoonNrLbl.setText("telefoon nr:");

        ratingLbl.setText("Rating:");

        winstenLbl.setText("Gewonnen geld:");

        telefoonNrField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                telefoonNrFieldKeyTyped(evt);
            }
        });

        ratingField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ratingFieldKeyTyped(evt);
            }
        });

        gewonnenGeldField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                gewonnenGeldFieldKeyTyped(evt);
            }
        });

        isDocentCB.setText("Docent");

        saveBtn.setText("Save");
        saveBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveBtnMouseClicked(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelBtnMouseClicked(evt);
            }
        });

        warningLbl.setForeground(new java.awt.Color(240, 240, 240));
        warningLbl.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(warningLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(addUserLbl)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(straatHuisNrLbl)
                                .addComponent(woonplaatsLbl)
                                .addComponent(postcodeLbl)
                                .addComponent(voorlettersLbl)
                                .addComponent(telefoonNrLbl)
                                .addComponent(emailLbl)
                                .addComponent(naamLbl)
                                .addComponent(ratingLbl)
                                .addComponent(winstenLbl))
                            .addGap(10, 10, 10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(naamField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(voorlettersField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(straatnaamField, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(huisNrField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(postcodeField)
                                .addComponent(woonplaatsField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(telefoonNrField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(emailField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ratingField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(gewonnenGeldField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(isDocentCB, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addUserLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(naamLbl)
                    .addComponent(naamField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(voorlettersLbl)
                    .addComponent(voorlettersField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(straatHuisNrLbl)
                    .addComponent(huisNrField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(straatnaamField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(woonplaatsLbl)
                    .addComponent(woonplaatsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(postcodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(postcodeLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telefoonNrLbl)
                    .addComponent(telefoonNrField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLbl)
                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ratingLbl)
                    .addComponent(ratingField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(winstenLbl)
                    .addComponent(gewonnenGeldField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(isDocentCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warningLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn)
                    .addComponent(cancelBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     /**
     * als getValues() en checkPostcode() true opleveren wordt editSpeler()
     * uitgevoerd zo niet krijgt de gebruiker een warning te zien
     *
     * @param evt
     */
    private void saveBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBtnMouseClicked
        if (getValues()) {
            if (FullHouse.checkPostcode(postcode)) {
                if (editSpeler()) {
                    this.setVisible(false);
                    this.dispose();
                }
            }
            else {
                warningLbl.setText("Ongeldige postcode! Formaat postcode: 1234AB.");
                warningLbl.setForeground(Color.red);
            }
        }
    }//GEN-LAST:event_saveBtnMouseClicked
    /*
     * sluit het scherm zonder veranderingen door te voeren
     */
    private void cancelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseClicked
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_cancelBtnMouseClicked
    /*
     * zorgt er voor dat in het ratingField alleen getallen ingevoerd kunnen worden
     */
    private void ratingFieldKeyTyped (java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ratingFieldKeyTyped
        if ((evt.getKeyChar() < '0' || evt.getKeyChar() > '9') && evt.getKeyChar() != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_ratingFieldKeyTyped
    /*
     * zorgt ervoor dat in het gewonnenGeldField alleen getallen ingevoerd kunnen worden
     */
    private void gewonnenGeldFieldKeyTyped (java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gewonnenGeldFieldKeyTyped
        if ((evt.getKeyChar() < '0' || evt.getKeyChar() > '9') && evt.getKeyChar() != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_gewonnenGeldFieldKeyTyped
    /*
     * zorgt ervoor dat in het telefoonNrField alleen getallen ingevoerd kunnen worden
     */
    private void telefoonNrFieldKeyTyped (java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telefoonNrFieldKeyTyped
        if (evt.getKeyChar() < '0' || evt.getKeyChar() > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_telefoonNrFieldKeyTyped
    /*
     * haalt de informatie uit de tables op en vult de velden
     * zodat deze aangepast kunnen worden
     */
    private void fillFields() {
        String query = "SELECT * FROM Speler WHERE spelerID = ?;";
        try {
            Connection conn = SimpleDataSource.getConnection();
            PreparedStatement stat = conn.prepareStatement(query);
            stat.setInt(1, spelerID);
            
            ResultSet result = stat.executeQuery();
            result.next();
            
            naamField.setText(result.getString("naam"));
            voorlettersField.setText(result.getString("voorletters"));
            straatnaamField.setText(result.getString("straatnaam"));
            huisNrField.setText(result.getString("huisNR"));
            woonplaatsField.setText(result.getString("woonplaats"));
            postcodeField.setText(result.getString("postcode"));
            telefoonNrField.setText(result.getString("telefoonNR"));
            emailField.setText(result.getString("email"));
            ratingField.setText("" + result.getInt("rating"));
            gewonnenGeldField.setText("" + result.getDouble("gewonnenGeld"));
            isDocentCB.setSelected(result.getBoolean("isDocent"));
            
            result.close();
            stat.close();
        }
        catch (SQLException e) {
            FullHouse.showDBError(e);
        }
    }
    /*
     * query om de speler table aan te passen
     * returned succes als er geen exception is 
     * returned false als er wel een exception is
     */
    private boolean editSpeler () {
        String query = "UPDATE Speler SET naam=?, voorletters=?, postcode=?, woonplaats=?, straatnaam=?, huisNr=?,"
                + "telefoonNr=?, email=?, rating=?, gewonnenGeld=?, isDocent=? WHERE spelerID=?;";
        try {
            Connection conn = SimpleDataSource.getConnection();
            PreparedStatement stat = conn.prepareStatement(query);
            
            stat.setString(1, naam);
            stat.setString(2, voorletters);
            stat.setString(3, postcode);
            stat.setString(4, woonplaats);
            stat.setString(5, straatnaam);
            stat.setString(6, huisNr);
            stat.setString(7, telefoonNr);
            stat.setString(8, email);
            stat.setDouble(9, rating);
            stat.setDouble(10, gewonnenGeld);
            stat.setBoolean(11, isDocentCB.isSelected());
            stat.setInt(12, spelerID);
            
            stat.executeUpdate();
            stat.close();
        }
        catch (Exception e) {
            FullHouse.showDBError(e);
            return false;
        }
        parent.getSpelers();
        return true;
    }
    /*
     * checkt of de ingevoerde waarden correct zijn
     */
    private boolean getValues () {
        naam = naamField.getText();
        voorletters = voorlettersField.getText();
        postcode = postcodeField.getText();
        woonplaats = woonplaatsField.getText();
        straatnaam = straatnaamField.getText();
        huisNr = huisNrField.getText();
        telefoonNr = telefoonNrField.getText();
        email = emailField.getText();
        try {
            rating = Double.parseDouble(ratingField.getText());
            gewonnenGeld = Double.parseDouble(gewonnenGeldField.getText());
        }
        catch (Exception e) {
            warningLbl.setText("Controleer rating en gewonnen geld");
            warningLbl.setForeground(Color.red);
            return false;
        }
        if (naam.length() < 2) {
            warningLbl.setText("Naam moet minimaal twee karakters bevatten");
            warningLbl.setForeground(Color.red);
            return false;
        }
        else if (voorletters.length() < 1) {
            warningLbl.setText("Vul minimaal één voorletter in");
            warningLbl.setForeground(Color.red);
            return false;
        }
        else if (straatnaam.length() < 2) {
            warningLbl.setText("Vul een straatnaam in");
            warningLbl.setForeground(Color.red);
            return false;
        }
        else if (huisNr.length() < 1) {
            warningLbl.setText("Vul een huisnummer in");
            warningLbl.setForeground(Color.red);
            return false;
        }
        else if (woonplaats.length() < 2) {
            warningLbl.setText("Vul een woonplaats in");
            warningLbl.setForeground(Color.red);
            return false;
        }
        else if (telefoonNr.length() != 10) {
            warningLbl.setText("Telefoon nummer moet tien tekens lang zijn");
            warningLbl.setForeground(Color.red);
            return false;
        }
        else if (email.length() < 5 || !email.contains("@") || !email.contains(".")) {
            warningLbl.setText("Ongeldig email adres");
            warningLbl.setForeground(Color.red);
            return false;
        }
        else {
            return true;
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addUserLbl;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailLbl;
    private javax.swing.JTextField gewonnenGeldField;
    private javax.swing.JTextField huisNrField;
    private javax.swing.JCheckBox isDocentCB;
    private javax.swing.JTextField naamField;
    private javax.swing.JLabel naamLbl;
    private javax.swing.JTextField postcodeField;
    private javax.swing.JLabel postcodeLbl;
    private javax.swing.JTextField ratingField;
    private javax.swing.JLabel ratingLbl;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel straatHuisNrLbl;
    private javax.swing.JTextField straatnaamField;
    private javax.swing.JTextField telefoonNrField;
    private javax.swing.JLabel telefoonNrLbl;
    private javax.swing.JTextField voorlettersField;
    private javax.swing.JLabel voorlettersLbl;
    private javax.swing.JLabel warningLbl;
    private javax.swing.JLabel winstenLbl;
    private javax.swing.JTextField woonplaatsField;
    private javax.swing.JLabel woonplaatsLbl;
    // End of variables declaration//GEN-END:variables
}
