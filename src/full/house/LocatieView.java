/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package full.house;

import com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Tim
 */
public class LocatieView extends javax.swing.JPanel {

    MainWindow window;
    
    /**
     * Creates new form SpelerView
     */
    public LocatieView() {
        initComponents();
        getLocaties();
    }
    
    public LocatieView(MainWindow window) {
        initComponents();
        this.window = window;
        getLocaties();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        locatieTable = new javax.swing.JTable();
        addLocatieBtn = new javax.swing.JButton();
        editLocatieBtn = new javax.swing.JButton();
        deleteLocatieBtn = new javax.swing.JButton();
        viewToernooienBtn = new javax.swing.JButton();

        locatieTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Naam", "Voorletters", "Straatnaam", "Huisnr", "Woonplaats", "Postcode", "E-mail adres", "Telefoon-nr", "Rating", "Winsten", "Docent"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        locatieTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(locatieTable);

        addLocatieBtn.setText("<html><div align=center>Nieuwe<br>locatie</div></html>");
        addLocatieBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addLocatieBtnMouseClicked(evt);
            }
        });

        editLocatieBtn.setText("<html><div align=center>Bewerk<br>locatie</div></html>");
        editLocatieBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editLocatieBtnMouseClicked(evt);
            }
        });

        deleteLocatieBtn.setText("<html><div align=center>Verwijder<br>locatie</html>");
        deleteLocatieBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteLocatieBtnMouseClicked(evt);
            }
        });

        viewToernooienBtn.setText("<html><div align=center>Bekijk<br>toernooien</div></html>");
        viewToernooienBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewToernooienBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addLocatieBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewToernooienBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteLocatieBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editLocatieBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addLocatieBtn, deleteLocatieBtn, editLocatieBtn, viewToernooienBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addLocatieBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editLocatieBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteLocatieBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewToernooienBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addLocatieBtn, deleteLocatieBtn, editLocatieBtn, viewToernooienBtn});

    }// </editor-fold>//GEN-END:initComponents
    /**
    * Opent dialog voor het toevoegen van een locatie.
    * @param evt 
    */
    private void addLocatieBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addLocatieBtnMouseClicked
        AddLocatie addLocatie = new AddLocatie(this);
        addLocatie.setLocation(300, 150);
        addLocatie.setVisible(true);
    }//GEN-LAST:event_addLocatieBtnMouseClicked

    /**
     * Opent dialog voor het aanpassen van de geselecteerde locatie.
     * @param evt 
     */
    private void editLocatieBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editLocatieBtnMouseClicked
        int[] rows = locatieTable.getSelectedRows();
        if (rows.length == 0) {
            JOptionPane.showMessageDialog(this, "Geen locatie(s) geselecteerd.", "Bewerk locatie", JOptionPane.PLAIN_MESSAGE);
        } else if (rows.length > 10) {
            JOptionPane.showMessageDialog(this, "Meer dan 10 locaties geselecteerd. Selecteerd een maximum van 10 locaties.", "Bewerk locatie", JOptionPane.PLAIN_MESSAGE);
        } else {
            for (int i = 0; i < rows.length; i++) {
                int locatieID = Integer.parseInt(locatieTable.getValueAt(rows[i], 0).toString());
                EditLocatie editLocatie = new EditLocatie(this, locatieID);
                editLocatie.setLocation(200 + i*30, 150 + i*30 - (i/5)*150);
                editLocatie.setVisible(true);
            }
        }
    }//GEN-LAST:event_editLocatieBtnMouseClicked

    /**
     * Verwijdert geselecteerde locatie.
     * @param evt 
     */
    private void deleteLocatieBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteLocatieBtnMouseClicked
        int confirm = JOptionPane.showConfirmDialog(this, "Weet U zeker dat U deze locatie wilt verwijderen?", "Verwijder locatie?", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            int[] rows = locatieTable.getSelectedRows();
            for (int i = 0; i < rows.length; i++) {
                int id = Integer.parseInt(locatieTable.getValueAt(rows[i], 0).toString());
                deleteLocatie(id);
            }
        }
    }//GEN-LAST:event_deleteLocatieBtnMouseClicked

    /**
     * Opent dialog voor het bekijken van de toernooien op de geselecteerde locatie.
     * @param evt 
     */
    private void viewToernooienBtnMouseClicked (java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewToernooienBtnMouseClicked
        int[] rows = locatieTable.getSelectedRows();
        if (rows.length == 0) {
            JOptionPane.showMessageDialog(this, "Geen locatie(s) geselecteerd.", "Bekijk locatie", JOptionPane.PLAIN_MESSAGE);
        } else if (rows.length > 1) {
            JOptionPane.showMessageDialog(this, "Meer dan één locatie geselecteerd.", "Bekijk locatie", JOptionPane.PLAIN_MESSAGE);
        } else {
            int id = Integer.parseInt(locatieTable.getValueAt(rows[0], 0).toString());
            ToernooienLocatieView view = new ToernooienLocatieView(id);
            view.setLocation(300, 200);
            view.setVisible(true);
        }
    }//GEN-LAST:event_viewToernooienBtnMouseClicked

    /**
     * Haalt de locaties op uit de database.
     */
    public final void getLocaties () {
        String query = "SELECT * FROM Locatie;";
        try {
            Connection conn = SimpleDataSource.getConnection();
            PreparedStatement stat = conn.prepareStatement(query);
            ResultSet result = stat.executeQuery();
            fillTable(result);
            result.close();
            stat.close();
        }
        catch (Exception e) {
            FullHouse.showDBError(e);
        }
    }
    
    /**
     * Verwijdert locatie uit de database.
     * @param id 
     */
    private void deleteLocatie (int id) {
        String query = "DELETE FROM Locatie WHERE locatieID = ?;";
        try {
            Connection conn = SimpleDataSource.getConnection();
            PreparedStatement stat = conn.prepareStatement(query);
            stat.setInt(1, id);
            stat.executeUpdate();
            stat.close();
        }
        catch (MySQLIntegrityConstraintViolationException e) {
            JOptionPane.showMessageDialog(this, "<html>Locatie kan niet verwijderd worden."
                    + "<br>Er staat een toernooi geregistreerd.</html>", "Fout", JOptionPane.ERROR_MESSAGE);
        }
        catch (Exception e) {
            FullHouse.showDBError(e);
        }
        getLocaties();
    }
    
    /**
     * Vult de tabel met de locaties.
     * @param result
     * @throws SQLException 
     */
    private void fillTable(ResultSet result) throws SQLException {
        String[] columnNames = {"ID", "Naam", "Aantal tafels",  "Spelers per tafel", "Straatnaam", "HuisNr", "Plaats", "Postcode"};
        DefaultTableModel model = new TableModel();
        model.setDataVector(new Object[][]{}, columnNames);
        while (result.next()) {
            String ID = result.getString("locatieID");
            ID = FullHouse.addZeroes(ID, 4);
            String naam = result.getString("naam");
            int aantalTafels = result.getInt("aantalTafels");
            int spelersPerTafel = result.getInt("spelersPerTafel");
            String straatnaam = result.getString("straatnaam");
            String huisnr = result.getString("huisNr");
            String plaats = result.getString("woonplaats");
            String postcode = result.getString("postcode");
            Object[] rowData = {ID, naam, aantalTafels, spelersPerTafel, straatnaam, huisnr, plaats, postcode};
            model.addRow(rowData);
        }
        locatieTable.setModel(model);
        //setColumnWidth(locatieTable);
        result.close();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addLocatieBtn;
    private javax.swing.JButton deleteLocatieBtn;
    private javax.swing.JButton editLocatieBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable locatieTable;
    private javax.swing.JButton viewToernooienBtn;
    // End of variables declaration//GEN-END:variables
}
